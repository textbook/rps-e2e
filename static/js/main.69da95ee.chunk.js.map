{"version":3,"sources":["Form.js","Outcome.js","App.js","rpsService.js","reportWebVitals.js","index.js"],"names":["Select","label","onChange","value","target","Form","onSubmit","useState","left","setLeft","right","setRight","onClick","outcomes","draw","Outcome","result","data-testid","App","setResult","rps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,MAApB,OACb,kCACGF,EACD,yBAAQE,MAAOA,EAAOD,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA0BD,EAASC,IAAnE,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,6BAkBSE,EAbF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,mBAAS,QADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEHF,mBAAS,QAFN,mBAEtBG,EAFsB,KAEfC,EAFe,KAI7B,OACE,gCACE,cAAC,EAAD,CAAQV,MAAM,OAAOC,SAAUO,EAASN,MAAOK,IAC/C,cAAC,EAAD,CAAQP,MAAM,QAAQC,SAAUS,EAAUR,MAAOO,IACjD,wBAAQE,QAAS,kBAAMN,EAAS,CAACE,EAAME,KAAvC,uBCrBAG,EAAW,CACfC,KAAM,QACNN,KAAM,aACNE,MAAO,eAOMK,MAJf,YAA8B,IAAXC,EAAU,EAAVA,OACjB,OAAO,qBAAKC,cAAY,UAAjB,SAA4BJ,EAASG,MCc/BE,MAff,WAAgB,IAAD,EACeX,qBADf,mBACNS,EADM,KACEG,EADF,KAOb,OACE,gCACE,cAAC,EAAD,CAAMb,SANM,SAAC,GAAmB,IAAD,mBAAjBE,EAAiB,KAAXE,EAAW,KACjCS,ECVG,SAAaX,EAAME,GACxB,OAAIF,IAASE,EACJ,OAGG,SAATF,GAA6B,aAAVE,GACP,aAATF,GAAiC,UAAVE,GACd,UAATF,GAA8B,SAAVE,EAEtB,OACA,QDAQU,CAAIZ,EAAME,OAMjBM,GAAU,cAAC,EAAD,CAASA,OAAQA,QEJnBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69da95ee.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Select = ({ label, onChange, value }) => (\n  <label>\n    {label}\n    <select value={value} onChange={({ target: { value }}) => onChange(value)}>\n      <option value=\"rock\">Rock</option>\n      <option value=\"paper\">Paper</option>\n      <option value=\"scissors\">Scissors</option>\n    </select>\n  </label>\n);\n\nconst Form = ({ onSubmit }) => {\n  const [left, setLeft] = useState(\"rock\");\n  const [right, setRight] = useState(\"rock\");\n\n  return (\n    <div>\n      <Select label=\"Left\" onChange={setLeft} value={left} />\n      <Select label=\"Right\" onChange={setRight} value={right} />\n      <button onClick={() => onSubmit([left, right])}>Throw</button>\n    </div>\n  );\n};\n\nexport default Form;\n","const outcomes = {\n  draw: \"Draw!\",\n  left: \"Left wins!\",\n  right: \"Right wins!\",\n};\n\nfunction Outcome({ result }) {\n  return <div data-testid=\"outcome\">{outcomes[result]}</div>;\n}\n\nexport default Outcome;\n","import { useState } from \"react\";\n\nimport Form from \"./Form\";\nimport Outcome from \"./Outcome\";\nimport { rps } from \"./rpsService\";\n\nfunction App() {\n  const [result, setResult] = useState();\n\n  const onThrow = ([left, right]) => {\n    setResult(rps(left, right));\n  }\n\n  return (\n    <div>\n      <Form onSubmit={onThrow} />\n      {result && <Outcome result={result} />}\n    </div>\n  );\n}\n\nexport default App;\n","export function rps(left, right) {\n  if (left === right) {\n    return \"draw\";\n  }\n  return (\n    (left === \"rock\" && right === \"scissors\")\n    || (left === \"scissors\" && right === \"paper\")\n    || (left === \"paper\" && right === \"rock\")\n  )\n    ? \"left\"\n    : \"right\";\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}